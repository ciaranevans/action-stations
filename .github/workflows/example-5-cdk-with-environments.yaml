name: Example 5 - CDK With Environments
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.10

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install wheel
          pip install poetry

      - name: Install dependencies
        run: |
          make example-5-install

      - name: Unit tests
        run: |
          make example-5-unit-tests
  dev-deployment:
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    needs: [unit-tests]
    environment:
      name: dev
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.10

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install wheel
          pip install poetry

      - name: Setup up Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: |
          make example-5-install

      - name: Configure awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Make .env file
        run: |
          cat <<EOF >> example-5-cdk-with-environments/.env
          IDENTIFIER=dev
          OWNER=action-stations-ci
          AWS_DEFAULT_REGION=us-west-2
          SECRET="${{ secrets.HTML_SECRET }}"
          EOF

      - name: Deploy Dev Stack
        run: |
          make example-5-deploy

      - name: Put message in bucket
        id: put-message
        run: |
          echo "::set-output name=messageurl::$(make -s example-5-put-message)"

      - name: Put message url in .env
        run: |
          echo DEPLOYED_MESSAGE_URL=${{ steps.put-message.outputs.messageurl }} >> example-5-cdk-with-environments/.env

      - name: Run integration tests
        run: |
          make example-5-integration-tests

      - name: Destroy Dev Stack
        if: always()
        run: |
          make example-5-destroy
  staging-deployment:
    runs-on: ubuntu-20.04
    if: github.event.ref == 'refs/heads/main'
    needs: [unit-tests]
    environment:
      name: staging
      url: ${{ steps.put-message.outputs.messageurl }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.10

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install wheel
          pip install poetry

      - name: Setup up Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: |
          make example-5-install

      - name: Configure awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Make .env file
        run: |
          cat <<EOF >> example-5-cdk-with-environments/.env
          IDENTIFIER=staging
          OWNER=action-stations-ci
          AWS_DEFAULT_REGION=us-west-2
          SECRET="${{ secrets.HTML_SECRET }}"
          EOF

      - name: Deploy Staging Stack
        run: |
          make example-5-deploy

      - name: Put message in bucket
        id: put-message
        run: |
          echo "::set-output name=messageurl::$(make -s example-5-put-message)"

      - name: Put message url in .env
        run: |
          echo DEPLOYED_MESSAGE_URL=${{ steps.put-message.outputs.messageurl }} >> example-5-cdk-with-environments/.env

      - name: Run integration tests
        run: |
          make example-5-integration-tests
  prod-deployment:
    runs-on: ubuntu-20.04
    if: github.event.ref == 'refs/heads/main'
    needs: [staging-deployment]
    environment:
      name: prod
      url: ${{ steps.put-message.outputs.messageurl }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.10

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install wheel
          pip install poetry

      - name: Setup up Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: |
          make example-5-install

      - name: Configure awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Make .env file
        run: |
          cat <<EOF >> example-5-cdk-with-environments/.env
          IDENTIFIER=prod
          OWNER=action-stations-ci
          AWS_DEFAULT_REGION=us-west-2
          SECRET="${{ secrets.HTML_SECRET }}"
          EOF

      - name: Deploy Prod Stack
        run: |
          make example-5-deploy

      - name: Put message in bucket
        id: put-message
        run: |
          echo "::set-output name=messageurl::$(make -s example-5-put-message)"
